syntax = "proto3";

package elys.tradeshield;

import "elys/tradeshield/types.proto";
import "elys/tradeshield/params.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/elys-network/elys/x/tradeshield/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  rpc CreatePendingSpotOrder(MsgCreatePendingSpotOrder)
      returns (MsgCreatePendingSpotOrderResponse);
  rpc UpdatePendingSpotOrder(MsgUpdatePendingSpotOrder)
      returns (MsgUpdatePendingSpotOrderResponse);
  rpc DeletePendingSpotOrder(MsgDeletePendingSpotOrder)
      returns (MsgDeletePendingSpotOrderResponse);
  rpc CreatePendingPerpetualOrder(MsgCreatePendingPerpetualOrder)
      returns (MsgCreatePendingPerpetualOrderResponse);
  rpc UpdatePendingPerpetualOrder(MsgUpdatePendingPerpetualOrder)
      returns (MsgUpdatePendingPerpetualOrderResponse);
  rpc DeletePendingPerpetualOrder(MsgDeletePendingPerpetualOrder)
      returns (MsgDeletePendingPerpetualOrderResponse);
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}
message MsgCreatePendingSpotOrder {
  option (cosmos.msg.v1.signer) = "owner_address";
  option (amino.name) = "tradeshield/MsgCreatePendingSpotOrder";
  SpotOrderType order_type = 1;
  OrderPrice order_price = 3;
  cosmos.base.v1beta1.Coin order_amount = 4;
  string owner_address = 5 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string order_target_denom = 6;
  Status status = 7;
  Date date = 8;
}

message MsgCreatePendingSpotOrderResponse { uint64 id = 1; }

message MsgUpdatePendingSpotOrder {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "tradeshield/MsgUpdatePendingSpotOrder";
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  uint64 id = 2;
  string order = 3;
}

message MsgUpdatePendingSpotOrderResponse {}

message MsgDeletePendingSpotOrder {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "tradeshield/MsgDeletePendingSpotOrder";
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  uint64 id = 2;
}

message MsgDeletePendingSpotOrderResponse {}

message MsgCreatePendingPerpetualOrder {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "tradeshield/MsgCreatePendingPerpetualOrder";
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string order = 2;
}

message MsgCreatePendingPerpetualOrderResponse { uint64 id = 1; }

message MsgUpdatePendingPerpetualOrder {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "tradeshield/MsgUpdatePendingPerpetualOrder";
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  uint64 id = 2;
  string order = 3;
}

message MsgUpdatePendingPerpetualOrderResponse {}

message MsgDeletePendingPerpetualOrder {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "tradeshield/MsgDeletePendingPerpetualOrder";
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  uint64 id = 2;
}

message MsgDeletePendingPerpetualOrderResponse {}

message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "tradeshield/MsgUpdateParams";
  // authority is the address that controls the module (defaults to x/gov unless
  // overwritten).
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // NOTE: All parameters must be supplied.
  Params params = 2;
}

message MsgUpdateParamsResponse {}
