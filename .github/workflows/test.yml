name: Run tests and upload coverage

on:
  pull_request:
  push:
    branches:
      - develop
      - devnet
      - main
      - avkr003/cc

jobs:
  test:
    name: Run tests and collect coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test -coverprofile=coverage.txt ./...

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true

      - name: Check keeper package coverage
        run: |
          echo "Searching for keeper packages:"
          find . -type d -path "*/x/*/keeper" -not -path "*/vendor/*"
          
          keeper_packages=$(find . -type d -path "*/x/*/keeper" -not -path "*/vendor/*")
          for keeper in $keeper_packages; do
            echo "Checking keeper package: $keeper"
            keeper_coverage=$(go tool cover -func=coverage.txt | grep "$keeper" | awk '{sum += $3; count++} END {if (count > 0) print sum / count; else print 0}')
            if [ -n "$keeper_coverage" ]; then
              if awk 'BEGIN {exit !('$keeper_coverage' < 90)}'; then
                echo "Coverage for $keeper is below 90%: ${keeper_coverage}%"
                exit 1
              else
                echo "Coverage for $keeper is ${keeper_coverage}% (meets 90% requirement)"
              fi
            else
              echo "No coverage data found for $keeper"
            fi
          done